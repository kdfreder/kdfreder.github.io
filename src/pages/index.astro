---
import Layout from '../layouts/layout.astro';

export interface Props {
  currentPage?: string;
}

const { currentPage = 'home' } = Astro.props;

// Fetch latest GitHub commit date and info
async function getLatestCommitDate() {
  try {
    // Replace 'kdfreder' with your GitHub username and 'kdfreder.github.io' with your repo name
    const response = await fetch('https://api.github.com/repos/kdfreder/kdfreder.github.io/commits?per_page=100');
    
    if (!response.ok) {
      throw new Error(`GitHub API error: ${response.status}`);
    }
    
    const commits = await response.json();
    
    if (commits.length > 0) {
      const commit = commits[0];
      const commitDate = new Date(commit.commit.author.date);
      const commitSha = commit.sha.substring(0, 7); // Get first 7 characters of commit SHA
      
      // Get total commit count from the Link header or estimate from current page
      let totalCommits = commits.length;
      
      // Try to get total count from headers if available
      const linkHeader = response.headers.get('Link');
      if (linkHeader) {
        const lastMatch = linkHeader.match(/page=(\d+)>; rel="last"/);
        if (lastMatch) {
          const lastPage = parseInt(lastMatch[1]);
          totalCommits = (lastPage - 1) * 100 + commits.length;
        }
      }
      
      const formattedDate = commitDate.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
      
      const formattedTime = commitDate.toLocaleTimeString('en-US', {
        hour12: false,
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit'
      });
      
      return {
        date: formattedDate,
        time: formattedTime,
        commitSha: commitSha,
        commitNumber: totalCommits
      };
    }
  } catch (error) {
    console.error('Error fetching GitHub commit date:', error);
  }
  
  // Fallback to current date if API fails
  const today = new Date();
  const fallbackDate = today.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
  const fallbackTime = today.toLocaleTimeString('en-US', {
    hour12: false,
    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit'
  });
  
  return {
    date: fallbackDate,
    time: fallbackTime,
    commitSha: 'N/A',
    commitNumber: 'N/A'
  };
}

const commitInfo = await getLatestCommitDate();
---

<Layout currentPage="home">

	<section id="heroSection" class="h-screen relative">
		<div class="container mx-auto h-full relative z-20">
			<div class="flex flex-col items-center justify-center h-full w-full">
				<div class="rich-text text-center w-[80%] md:w-[60%] lg:w-[40%] mx-auto">
					<h1 class="text-3xl font-bold text-white mb-4" data-aos="fade-down">Welcome to My <span class="hover:text-4xl transition-all duration-300">.Astro</span> Project</h1>
					<p class="text-sm text-white/80 mb-6" data-aos="fade-up" data-aos-delay="100">Crafted using Astro's component-based architecture and styled with Tailwind CSS for a modern, responsive design. Alpine.js powers interactive components with lightweight reactivity, while PostCSS handles advanced CSS processing. The project is deployed seamlessly on GitHub Pages.</p>
				</div>
			</div>
		</div>
		<div class="w-[60vw] h-[120vh] absolute top-0 right-0 shadow-lg z-10">
			<div class="w-full h-full absolute top-0 left-0 z-30 bg-black/65"></div>
			<img src="../images/6835450453418620230.jpg" alt="Hero Image" class="w-full h-full object-cover">
		</div>
		<div class="flashbar absolute top-full left-0 z-0"></div>
	</section>

	<section class="bg-white pt-[30vh] pb-[20vh]">
		<div class="container max-w-xl mx-auto h-full relative z-10 pt-[10vh]">
			<div class="flex flex-col md:flex-row justify-center h-full w-full gap-4 md:gap-8">
				<div class="md:w-1/2">
					<div class="rich-text" data-aos="fade-up">	
						<h2 class="h3">Last Repo Commit:</h2>
						<div class="text-sm">{commitInfo.commitNumber} | {commitInfo.date} at {commitInfo.time}</div>
					</div>
				</div>
				<div class="md:w-1/2">
					<div class="rich-text" data-aos="fade-up" data-aos-delay="100">
						<h3>Thanks for visiting!</h3>
						<div class="text-sm">I'm currently working on this project, so this site is a work in progress. Feel free to check out my <a href="/portfolio">portfolio</a> for more projects and examples of work.</div>
					</div>
				</div>
			</div>
		</div>
	</section>
	
</Layout>
